// Decompiled by DJ v3.12.12.96 Copyright 2011 Atanas Neshkov  Date: 12/12/2017 12:21:41 p. m.
// Home Page: http://members.fortunecity.com/neshkov/dj.html  http://www.neshkov.com/dj.html - Check often for new version!
// Decompiler options: packimports(3) 
// Source File Name:   IMAPResponse.java

package com.sun.mail.imap.protocol;

import com.sun.mail.iap.*;
import com.sun.mail.util.ASCIIUtility;
import java.io.IOException;
import java.util.Vector;

public class IMAPResponse extends Response
{

    public IMAPResponse(Protocol c)
        throws IOException, ProtocolException
    {
        super(c);
        init();
    }

    private void init()
        throws IOException, ProtocolException
    {
        if(isUnTagged() && !isOK() && !isNO() && !isBAD() && !isBYE())
        {
            key = readAtom();
            try
            {
                number = Integer.parseInt(key);
                key = readAtom();
            }
            catch(NumberFormatException ne) { }
        }
    }

    public IMAPResponse(IMAPResponse r)
    {
        super(r);
        key = r.key;
        number = r.number;
    }

    public IMAPResponse(String r)
        throws IOException, ProtocolException
    {
        super(r);
        init();
    }

    public String[] readSimpleList()
    {
        skipSpaces();
        if(buffer[index] != 40)
            return null;
        index++;
        Vector v = new Vector();
        int start = index;
        for(; buffer[index] != 41; index++)
            if(buffer[index] == 32)
            {
                v.addElement(ASCIIUtility.toString(buffer, start, index));
                start = index + 1;
            }

        if(index > start)
            v.addElement(ASCIIUtility.toString(buffer, start, index));
        index++;
        int size = v.size();
        if(size > 0)
        {
            String s[] = new String[size];
            v.copyInto(s);
            return s;
        } else
        {
            return null;
        }
    }

    public String getKey()
    {
        return key;
    }

    public boolean keyEquals(String k)
    {
        return key != null && key.equalsIgnoreCase(k);
    }

    public int getNumber()
    {
        return number;
    }

    private String key;
    private int number;
}