// Decompiled by DJ v3.12.12.96 Copyright 2011 Atanas Neshkov  Date: 12/12/2017 12:21:42 p. m.
// Home Page: http://members.fortunecity.com/neshkov/dj.html  http://www.neshkov.com/dj.html - Check often for new version!
// Decompiler options: packimports(3) 
// Source File Name:   LineInputStream.java

package com.sun.mail.util;

import java.io.*;

public class LineInputStream extends FilterInputStream
{

    public LineInputStream(InputStream in)
    {
        super(in);
        lineBuffer = null;
    }

    public String readLine()
        throws IOException
    {
        char buf[] = lineBuffer;
        if(buf == null)
            buf = lineBuffer = new char[128];
        int room = buf.length;
        int offset = 0;
        int c1;
        for(; (c1 = in.read()) != -1 && c1 != 10; buf[offset++] = (char)c1)
        {
            if(c1 == 13)
            {
                boolean twoCRs = false;
                if(in.markSupported())
                    in.mark(2);
                int c2 = in.read();
                if(c2 == 13)
                {
                    twoCRs = true;
                    c2 = in.read();
                }
                if(c2 == 10)
                    break;
                if(in.markSupported())
                {
                    in.reset();
                    break;
                }
                if(!(in instanceof PushbackInputStream))
                    in = new PushbackInputStream(in, 2);
                if(c2 != -1)
                    ((PushbackInputStream)in).unread(c2);
                if(twoCRs)
                    ((PushbackInputStream)in).unread(13);
                break;
            }
            if(--room >= 0)
                continue;
            if(buf.length < MAX_INCR)
                buf = new char[buf.length * 2];
            else
                buf = new char[buf.length + MAX_INCR];
            room = buf.length - offset - 1;
            System.arraycopy(lineBuffer, 0, buf, 0, offset);
            lineBuffer = buf;
        }

        if(c1 == -1 && offset == 0)
            return null;
        else
            return String.copyValueOf(buf, 0, offset);
    }

    private char lineBuffer[];
    private static int MAX_INCR = 0x100000;

}